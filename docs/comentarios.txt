Nós já aprendemos a usar Selenium em algumas abordagens:
- Gravação e execução com Selenium IDE
Adaptar a gravação com o Selenium WebDriver
Criar nossos próprios scripts simples em programação

Em um projeto simples, cada teste é um arquivo

Agora vamos aprender abordagens úteis em projetos com vida útil maior:

Projeto utilizando a abordagem BDD (Bahavior Driven Development)
- Desenvolvimento Direcionado por Comportamento
--> Foco do DBB é melhorar a comunição do time
--> Usar um plugin / framework chamado Cucumber (kiocâmber) (Pepino)
--> Seguir a sintaxe Gherkin (picles de pepino)

Um teste será composto por 2 arquivos
- arquivo de negócio, escrito em Gherkin (.feature)
- arquivo de automação, que faz referência ao .feature (.java)

Projeto ttilizando a abordagem Page Objects / Page Factory
- Pode usar ou não BDD
--> Foco na manutenção e reaproveitamento de longo prazo
--> Útil para projetos com Ciclo de Vida de Desenvolvimento de Software 
    (CVDS/SDLC)

    Um teste vão ser vários arquivos...
    - um arquivo de mapeamento para cada página ou região da página (*Page.java)
    - um arquivo de CommonPage para tudo que há em comum nos mapeamentos
    - Um arquivo chamado base para definir o Selenium que vai ser compartilhado
    (bola)
    - pode ter um arquivo de negócio, escrito em Gherkin (.feature)
    - um arquivo de automação, que faz referência ao .feature (.java) e ao mapeamento
    por projeto: 
    - um arquivo de hooks (Before e After centralizados)
    - um arquivo ruuner (executar o teste / maestro)



    Sobre Driver de Navegador
    - um driver é um controlador que fica entre o Selenium e o Browser
    - Existem pleo menos 9 formas diferentes de organizar e configurar o Driver
    As princiapis:
    - Usar a biblioteca WebDriverManager (atualização automomática)
    - Baixar o driver manualmente para dentro do projeto
      - Fácil de levar para outro computador (levar para viagem)
      - Ruim porque quando tem atualização precisa adicionar em todos os projetos
    - Baixar o driver manualmente para uma pasta comum do computador
      - Atualiza o driver em uma pasta, atualizou para todos os projetos
      - Precisa ter uma pasta no computador e apontar nas variáveis de ambiente
      (depende da configuração da máquina para executar)


      - Deixar mais lento para visualizar melhor (temporária)
      --> Use o syncronized para realizar uma pausa
      
      - DDT via exemplos ou lendo um CSV
      --> Melhor usar a tabela de Exemplos em Page Object e BDD
      --> Ler CSV pode ser uma opção em scripts mais simples